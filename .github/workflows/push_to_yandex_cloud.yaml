# Определяем название процесса (просто отображается на странице Actions в GitHub)
name: Push To Yandex Cloud CR

# Определяем условия запуска процесса
# Подробнее см. https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows)
on:
  # Позволяет запускать вручную из GitHub
  workflow_dispatch:

  # Позволяет запускать при push в main (и при commit и при merge)
  push:
    branches:
      - SCP

# Определяем процесс (состоит из нескольких последовательных/параллельных джобов)
jobs:
  # Но нам хватит одного
  build:
    # Для построение проекта от вас не требуется сервер или что-либо подобное,
    # GitHub выполнит построение, используя собственный runner - такую
    # общедоступную 'виртуальную машину'
    runs-on: ubuntu-latest

    # Определяем шаги процесса
    steps:
      # Запускает предварительную проверку
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      # Авторизация в Яндекс.Облаке (здесь ничего не меняем)
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: '{
            id: ajeke6io3gh38i92ek20
            service_account_id: ajebicimfkvct6n6qo8q
            created_at: "2024-01-10T11:12:25.029203908Z"
            key_algorithm: RSA_2048
          }'

      # Построение образа и отправка его в Container Registry
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          # Здесь указываем идентификатор регистра (о нём позднее)
          CR_REGISTRY: crpi2h694kobpg8ol8l6
          # Здесь указываем название репозитория (впрочем оно далее не используется)
          CR_REPOSITORY: cherry-pies-game
          # Здесь ничего не меняем (формирует уникальное название для образа)
          IMAGE_TAG: ${{ github.sha }}
          # Далее указываем все прочие нужные нам перееменные среды
          CLIENT_PORT: 3000
          SERVER_PORT: 3001
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_PORT: 5432
        # Всё описание выше было лишь подготовкой
        # Тем не менее, оставшиеся шаги более не должны вызывать вопросы
        run: |
          docker compose build
          docker tag practicum-client:latest cr.yandex/$CR_REGISTRY/practicum-client:latest
          docker push cr.yandex/$CR_REGISTRY/practicum-client:latest
          docker tag practicum-server:latest cr.yandex/$CR_REGISTRY/practicum-server:latest
          docker push cr.yandex/$CR_REGISTRY/practicum-server:latest
